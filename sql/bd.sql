-- This script was generated by a beta version of the ERD tool in pgAdmin 4.
-- Please log an issue at https://redmine.postgresql.org/projects/pgadmin4/issues/new if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS public."Bid"
(
    "ID" integer NOT NULL DEFAULT nextval('"Bid_ID_seq"'::regclass),
    title character varying(50) COLLATE pg_catalog."default" NOT NULL,
    description character varying(150) COLLATE pg_catalog."default" NOT NULL,
    "outPrice" integer NOT NULL,
    thumbs character varying[] COLLATE pg_catalog."default",
    active boolean NOT NULL,
    owner integer NOT NULL,
    CONSTRAINT "Bid_pkey" PRIMARY KEY ("ID")
);

CREATE TABLE IF NOT EXISTS public."Category"
(
    "ID" integer NOT NULL DEFAULT nextval('"Category_ID_seq"'::regclass),
    name character varying(50) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT "Category_pkey" PRIMARY KEY ("ID")
);

CREATE TABLE IF NOT EXISTS public."Login"
(
    username character varying(20) COLLATE pg_catalog."default" NOT NULL,
    password character varying(20) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT "Login_pkey" PRIMARY KEY (username)
);

CREATE TABLE IF NOT EXISTS public."User"
(
    "ID" integer NOT NULL DEFAULT nextval('"User_ID_seq"'::regclass),
    role usertype NOT NULL,
    name character varying(30) COLLATE pg_catalog."default" NOT NULL,
    "lastName" character varying(50) COLLATE pg_catalog."default" NOT NULL,
    address character varying(80) COLLATE pg_catalog."default" NOT NULL,
    city character varying(50) COLLATE pg_catalog."default" NOT NULL,
    age integer NOT NULL,
    sex sex NOT NULL,
    "loginID" integer NOT NULL,
    CONSTRAINT "User_pkey" PRIMARY KEY ("ID")
);

CREATE TABLE IF NOT EXISTS public."Category_User"
(
    "Category_ID" integer NOT NULL DEFAULT nextval('"Category_ID_seq"'::regclass),
    "User_ID" integer NOT NULL DEFAULT nextval('"User_ID_seq"'::regclass)
);

CREATE TABLE IF NOT EXISTS public."User_activeBids"
(
    "User_ID" integer NOT NULL DEFAULT nextval('"User_ID_seq"'::regclass),
    "Bid_ID" integer NOT NULL DEFAULT nextval('"Bid_ID_seq"'::regclass)
);

CREATE TABLE IF NOT EXISTS public."User_favBid"
(
    "User_ID" integer NOT NULL DEFAULT nextval('"User_ID_seq"'::regclass),
    "Bid_ID" integer NOT NULL DEFAULT nextval('"Bid_ID_seq"'::regclass)
);

ALTER TABLE IF EXISTS public."Bid"
    ADD FOREIGN KEY (owner)
    REFERENCES public."User" ("ID") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."User"
    ADD FOREIGN KEY ("loginID")
    REFERENCES public."Login" (username) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."Category_User"
    ADD FOREIGN KEY ("Category_ID")
    REFERENCES public."Category" ("ID") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."Category_User"
    ADD FOREIGN KEY ("User_ID")
    REFERENCES public."User" ("ID") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."User_activeBids"
    ADD FOREIGN KEY ("User_ID")
    REFERENCES public."User" ("ID") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."User_activeBids"
    ADD FOREIGN KEY ("Bid_ID")
    REFERENCES public."Bid" ("ID") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."User_favBid"
    ADD FOREIGN KEY ("User_ID")
    REFERENCES public."User" ("ID") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."User_favBid"
    ADD FOREIGN KEY ("Bid_ID")
    REFERENCES public."Bid" ("ID") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;

END;